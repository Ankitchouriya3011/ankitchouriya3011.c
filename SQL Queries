--SELECT TOP 100 ROWS--
SELECT TOP 100 * FROM Loan_Data

 Q1.Total Funded Amount in 2021 ?
select SUM(loan_amount) as Total_Funded_Amount from Loan_Data;

 Q2.Total Number of Applications Received By Bank?
select COUNT(id) as Total_Applications from Loan_data;

 Q3.Total Amount Recieved ?
select SUM(total_payment) as Total_Amount_Recieved from Loan_Data;

Q4.Average Interest Rate ?
select Round(AVG(int_rate),4)*100 AS Avg_Interest_Rate from Loan_Data;

Q5.Total Number of Applications for Sep,Oct, month and year 2021 ?
select COUNT(id) as Month_to_Date_Applications from Loan_Data
where (MONTH(issue_date) = 9 or MONTH(issue_date) = 10) AND YEAR(issue_date) = 2021;

Q6.Total Funded Amount jan 2021 
select SUM(loan_amount) as MTD_Total_Funded_Amount from Loan_Data
where MONTH(issue_date) = 1 AND YEAR(issue_date) = 2021;

Q7.Average Debt to Income Ratio 
select Round(AVG(dti),4)*100 AS Avg_DTI from Loan_Data;

Q8.Good Loan Percentage 
select COUNT(case when loan_status = 'Fully Paid' OR loan_status = 'Current' then id END) * 100 / COUNT (id) as Good_Loan_Perc
from Loan_Data;

Q9.Good Loan Funded Amounts 
select SUM(total_payment) as Good_Loan_Fund
from Loan_Data
where loan_status IN ('Fully Paid','Current');

Q10.Total Count of Good Loan Applications Recieved Application ?
select COUNT(id) as Good_Loan_Application 
from Loan_Data
where loan_status = 'Fully Paid' OR loan_status = 'Current';

Q11.Bad Loan Percentage ?
select COUNT(case when loan_status = 'Charged Off' then id END)* 100 / COUNT (id) as Bad_Loan_Perc
from Loan_Data;

Q12.Total Count of Bad Loan Applications ?
select COUNT(id) as Bad_Loan_Application 
from Loan_Data
where loan_status IN ('Charged Off');

Q13.Bad Loan Funded Amount 
select SUM(loan_amount) as Bad_Loan_Amount 
from Loan_Data
where loan_status IN ('Charged Off');

Q14.Total sum of the loan amount received by each state and Ranking them 
SELECT address_state,SUM(loan_amount) AS total_loan_amount,RANK() OVER (ORDER BY SUM(loan_amount) DESC) AS state_rank
FROM Loan_Data
GROUP BY
address_state;

Q15.find the ID that has taken the highest loan for each purpose and rank them 
  WITH RankedLoans AS (
  SELECT id, purpose, loan_amount,ROW_NUMBER() OVER (PARTITION BY purpose ORDER BY loan_amount DESC) AS purpose_rank
  FROM Loan_Data)

Q16.find the relationship between loan status and income
SELECT
    loan_status,
    AVG(annual_income) AS average_income,
    MIN(annual_income) AS min_income,
    MAX(annual_income) AS max_income,
    COUNT(*) AS total_loans
FROM
    Loan_Data
GROUP BY
    loan_status;

Q17.rank the emp_title based on the total sum of loans for each region 
SELECT
    emp_title,
    address_state,
    SUM(loan_amount) AS total_loan_amount,
    RANK() OVER (PARTITION BY emp_title ORDER BY SUM(loan_amount) DESC) AS rank_in_region
FROM
    Loan_Data
GROUP BY
    emp_title, address_state
ORDER BY
    address_state, rank_in_region;


 




-- 
